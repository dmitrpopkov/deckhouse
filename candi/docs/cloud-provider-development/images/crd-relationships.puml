@startuml crd-relationships

skinparam nodesep 80
skinparam ranksep 80
skinparam object {
    backgroundColor<< deckhouse.io/v1 >> #ade8ff
    backgroundColor<< infrastructure.cluster.x-k8s.io/v1alpha1 >> #D9EAD3
    backgroundColor<< deckhouse.io/v1alpha1 >> #faf6bb
}

' deckhouse.io/v1
object NodeGroup << deckhouse.io/v1 >> {
    <font color="Green">spec.cloudInstances.classReference: SampleInstanceClass</font>
}

' cluster.x-k8s.io/v1beta1
object Cluster << cluster.x-k8s.io/v1beta1 >> {
    <font color="Green">spec.infrastructureRef: SampleCluster</font>
    <font color="Red">spec.controlPlaneRef: SampleControlPlane</font>
}

object MachineDeployment << cluster.x-k8s.io/v1beta1 >> {
    spec.clusterName
    <font color="Green">spec.template.spec.infrastructureRef: SampleMachineTemplate</font>
    <font color="Red">spec.template.spec.bootstrap.dataSecretName: Secret</font>
    spec.replicas: calculates in the 'node-manager' module
}
object MachineSet << cluster.x-k8s.io/v1beta1 >> {
    <font color="Green">spec.template.spec.infrastructureRef: SampleMachineTemplate</font>
    <font color="Red">spec.template.spec.bootstrap.dataSecretName: Secret</font>
}
object Machine << cluster.x-k8s.io/v1beta1 >> {
    <font color="Green">spec.infrastructureRef: SampleMachine</font>
    <font color="Red">spec.bootstrap.dataSecretName: Secret</font>
}

' infrastructure.cluster.x-k8s.io/v1alpha1
object SampleControlPlane << infrastructure.cluster.x-k8s.io/v1alpha1 >> {
    status.ready: true
    <font color="Green">status.externalManagedControlPlane: true</font>
}

' core/v1
object Secret << core/v1 >> {
   metadata.name: manual-bootstrap-for-{{ NodeGroup.metadata.name }}
}

' Infrastructure provider CRD
object SampleCluster << infrastructure.cluster.x-k8s.io/v1alpha1 >> {
  status.ready: true
}

object SampleMachineTemplate << infrastructure.cluster.x-k8s.io/v1alpha1 >> {
}

object SampleMachine << infrastructure.cluster.x-k8s.io/v1alpha1 >> {
  spec.providerID: Node.spec.providerID
}

object SampleInstanceClass << deckhouse.io/v1alpha1 >> {
}

object Node << core/v1 >> {
  spec.providerID
}

object Instance << deckhouse.io/v1 >> {
  status.machineRef: Machine
  status.nodeRef: Node
  status.currentStatus.phase: Machine.status.phase
}

' The straight lines (-->) represent "management". For example, "MachineSet
' manages Machines". The dotted line (..>)represents "reference". For example,
' "Machine `spec.infrastructureRef` field references SampleMachine".
'
' The direction of the arrows indicates the direction of "management" or
' "reference". For example, "the relationship between MachineSet and Machine is
' management from MachineSet to Machine", so the arrow points from MachineSet
' to Machine.

NodeGroup "1" --> "1" MachineDeployment
NodeGroup "1" --> "1" SampleMachineTemplate
NodeGroup "1" ..> "1" SampleInstanceClass

MachineDeployment "1..*" .left.> "1" Cluster
MachineDeployment "1" ..> "1" SampleMachineTemplate
MachineDeployment "1" --> "1" MachineSet
MachineDeployment "1" ..> "1" Secret

Cluster "1" ..> "1" SampleControlPlane
Cluster "1" ..> "1" SampleCluster

MachineSet "1..*" ..> "1" Cluster
MachineSet "1" ..> "1" SampleMachineTemplate
MachineSet "1" ..> "1" Secret
MachineSet "1" --> "1..*" Machine
MachineSet "1" --> "1..*" SampleMachine

Machine "1..*" ..> "1" Cluster
Machine "1" ..> "1" SampleMachine
Machine "1..*" ..> "1" Secret
Machine "1" --> "1" Instance

SampleMachine "1" ..> "1" Node

Instance "1" ..> "1" Node
Instance "1" ..> "1" Machine

@endurl
